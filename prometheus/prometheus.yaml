#
# prometheus configurations
#
apiVersion: v1
kind: Secret
metadata:
  name: kube-rbac-proxy-custom
  namespace: openshift-user-workload-monitoring
type: Opaque
stringData:
  config.yaml: |
    "authorization":
      "static":
      - "path": "/metrics"
        "resourceRequest": false
        "user":
          "name": "system:serviceaccount:openshift-user-workload-monitoring:prometheus-custom"
        "verb": "get"
      - "path": "/federate"
        "resourceRequest": false
        "user":
          "name": "system:serviceaccount:openshift-user-workload-monitoring:prometheus-custom"
        "verb": "get"

#
# prometheus rbac
#
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-custom
  namespace: openshift-user-workload-monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-custom
  namespace: openshift-customer-monitoring
---
apiVersion: security.openshift.io/v1
kind: SecurityContextConstraints
metadata:
  name: prometheus-custom
allowHostDirVolumePlugin: false
allowHostIPC: false
allowHostNetwork: false
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: false
allowPrivilegeEscalation: false
fsGroup:
  type: RunAsAny
users:
  - system:serviceaccount:openshift-user-workload-monitoring:prometheus-custom
readOnlyRootFilesystem: true
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
volumes:
  - "*"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-namespaced
rules:
  - apiGroups:
    - ""
    resources:
    - namespace/metrics
    verbs:
    - get
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  # NOTE: these are permissions added for the openshift-customer-monitoring namespace
  # - apiGroups:
  #   - ""
  #   resources:
  #   - secrets
  #   verbs:
  #   - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-customer-monitoring
  namespace: openshift-customer-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s-openshift-customer-monitoring
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-config
  namespace: openshift-user-workload-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: prometheus-k8s-config
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-alertmanager-edit
  namespace: openshift-user-workload-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: monitoring-alertmanager-edit
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-k8s
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-dns-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dns-monitoring
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-router-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: router-monitoring
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-registry-monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: registry-monitoring
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-scheduler-resources
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-k8s-scheduler-resources
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: prometheus-custom-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-custom-namespaced
subjects:
  - kind: ServiceAccount
    name: prometheus-custom
    namespace: openshift-user-workload-monitoring

#
# prometheus app
#   NOTE: annotations on service will create a special secret for the service to use
#
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: prometheus-custom-tls
  name: prometheus-custom
  namespace: openshift-user-workload-monitoring
spec:
  ports:
    - name: web
      port: 9090
      targetPort: web
  selector:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
  sessionAffinity: ClientIP
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  labels:
    app.kubernetes.io/component: prometheus
    app.kubernetes.io/instance: custom
    app.kubernetes.io/managed-by: cluster-monitoring-operator
    app.kubernetes.io/name: prometheus
    app.kubernetes.io/part-of: custom-monitoring
    app.kubernetes.io/version: 2.46.0
  name: custom
  namespace: openshift-user-workload-monitoring
spec:
  #
  # kubenetes pod config
  #
  image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b6a6378416d23c43980f425d898eacf1e9608253d07ec6d55ab72cda0a1940ce
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: custom
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: custom-monitoring
          namespaces:
            - openshift-user-workload-monitoring
          topologyKey: kubernetes.io/hostname
  podMetadata:
    labels:
      app.kubernetes.io/name: prometheus-custom
  nodeSelector:
    kubernetes.io/os: linux
  replicas: 2
  resources:
    requests:
      cpu: 6m
      memory: 30Mi
  securityContext:
    fsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
  serviceAccountName: prometheus-custom

  #
  # prometheus config
  #
  logLevel: debug
  scrapeInterval: 30s
  version: v2.46.0
  retention: 11d
  retentionSize: 90GB
  alerting:
    alertmanagers:
      - apiVersion: v2
        bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
        name: alertmanager-custom
        namespace: openshift-user-workload-monitoring
        port: web
        scheme: https
        tlsConfig:
          ca: {}
          caFile: /etc/prometheus/configmaps/serving-certs-ca-bundle/service-ca.crt
          cert: {}
          serverName: alertmanager-custom.openshift-user-workload-monitoring.svc
  podMonitorNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: "true"
  podMonitorSelector:
    matchExpressions:
      - key: monitoring.openshift.io/collection-profile
        operator: NotIn
        values:
          - minimal
  ruleNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: "true"
  ruleSelector: {}
  rules:
    alert: {}
  serviceMonitorNamespaceSelector:
    matchLabels:
      openshift.io/cluster-monitoring: "true"
  serviceMonitorSelector:
    matchExpressions:
      - key: monitoring.openshift.io/collection-profile
        operator: NotIn
        values:
          - minimal
  web:
    httpConfig:
      headers:
        contentSecurityPolicy: frame-ancestors 'none'

  #
  # volumes
  #
  tsdb: {}
  volumes:
    - configMap:
        name: metrics-client-ca
      name: metrics-client-ca
    - name: prometheus-trusted-ca-bundle
      configMap:
        items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
        name: prometheus-trusted-ca-bundle
        optional: true
  storage:
    volumeClaimTemplate:
      metadata:
        name: prometheus-data
      spec:
        resources:
          requests:
            storage: 100Gi
      status: {}
  configMaps:
    - serving-certs-ca-bundle
    - kubelet-serving-ca-bundle
    - metrics-client-ca
  secrets:
    - prometheus-custom-tls
    - kube-rbac-proxy-custom
    - metrics-client-certs
    - prometheus-k8s-proxy

  #
  # containers
  #
  containers:
    #
    # prometheus
    #
    - name: prometheus
      resources: {}
      startupProbe:
        failureThreshold: 240
        periodSeconds: 15
      volumeMounts:
        - mountPath: /etc/pki/ca-trust/extracted/pem/
          name: prometheus-trusted-ca-bundle
          readOnly: true

    #
    # prometheus-proxy
    #
    - args:
        - -provider=openshift
        - -https-address=:9091
        - -http-address=
        - -email-domain=*
        - -upstream=http://localhost:9090
        - -openshift-service-account=prometheus-custom
        - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
        - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
        - -tls-cert=/etc/tls/private/tls.crt
        - -tls-key=/etc/tls/private/tls.key
        - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
        - -cookie-secret-file=/etc/proxy/secrets/session_secret
        - -openshift-ca=/etc/pki/tls/cert.pem
        - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      env:
        - name: HTTP_PROXY
        - name: HTTPS_PROXY
        - name: NO_PROXY
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b4d89810d0cd2cd0b24d2f6b1febbc68b8a2a18277a4362a2d2fa1a792c5abaf
      name: prometheus-proxy
      ports:
        - containerPort: 9091
          name: web
          protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-custom-tls
        - mountPath: /etc/proxy/secrets
          name: secret-prometheus-k8s-proxy
        - mountPath: /etc/pki/ca-trust/extracted/pem/
          name: prometheus-trusted-ca-bundle
          readOnly: true

    #
    # kube-rbac-proxy
    #
    - args:
        - --secure-listen-address=0.0.0.0:9092
        - --upstream=http://127.0.0.1:9090
        - --allow-paths=/metrics,/federate
        - --config-file=/etc/kube-rbac-proxy/config.yaml
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        - --client-ca-file=/etc/tls/client/client-ca.crt
        - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
        - --logtostderr=true
        - --tls-min-version=VersionTLS12
        - --v=10
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:becb75a3f75a03809d5a9fca553dc4194ce22b787104301337af2c4d2fe5da8e
      name: kube-rbac-proxy
      ports:
        - containerPort: 9092
          name: metrics
          protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /etc/tls/private
          name: secret-prometheus-custom-tls
        - mountPath: /etc/tls/client
          name: configmap-metrics-client-ca
          readOnly: true
        - mountPath: /etc/kube-rbac-proxy
          name: secret-kube-rbac-proxy-custom
